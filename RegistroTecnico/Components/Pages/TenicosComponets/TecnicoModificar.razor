@page "/Tecnico/Modificar/{TecnicoId:int}"
@inject TecnicoService tecnicoservice
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Técnico</PageTitle>

<EditForm Model="Tecnico" OnValidSubmit="Guardar">
	<DataAnnotationsValidator></DataAnnotationsValidator>

	<label class="text-danger fs-5" hidden="@string.IsNullOrEmpty(ErrorNombre)">@ErrorNombre</label>
	<label class="text-success fs-5" hidden="@string.IsNullOrEmpty(GuardarExito)">@GuardarExito</label>

	<div class="container">
		<div class="card shadow-lg">
		<div class="card-header position-relative text-center">
			<h5 class="card-title">Editar técnico</h5>
		</div>

		<div class="card-body">
			<div class="mb-3">
				<label class="form-label"><strong>Técnico Id</strong></label>
				<InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>

			</div>
			<div class="mb-3">
				<label class="form-label"><strong>Nombre</strong></label>
				<InputText class="form-control" @bind-Value="Tecnico.TecnicoNombre"></InputText>
				<ValidationMessage For="(()=>Tecnico.TecnicoNombre)" />
			</div>
			<div class="mb-3">
				<label class="form-label"><strong>Sueldo</strong></label>
				<InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>
				<ValidationMessage For="(()=>Tecnico.SueldoHora)"></ValidationMessage>
			</div>
		</div>

			<div class="card-footer text-center mt-2">
				<div class="btn-group" role="group">
					<a type="button" href="/Tecnico/Eliminar/@Tecnico.TecnicoId" class="btn btn-outline-danger"><span class="bi bi-trash"></span>Eliminar</a>
					<button type="submit" class="btn btn-outline-success"><span class="bi bi-floppy"></span>Guardar</button>
					<a href="/Tecnico/Index" class="btn btn-outline-secondary"><span class="bi bi-arrow-left"></span>Volver</a>
				</div>
			</div>
		</div>
</div>
</EditForm>

@code {
	[Parameter]
	public int TecnicoId { get; set; }
	private Tecnicos Tecnico { get; set; } = new Tecnicos();
	public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
	private string ErrorNombre { get; set; } = string.Empty;
	private string GuardarExito { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Tecnico = await tecnicoservice.Buscar(TecnicoId);
		ListaTecnicos = await tecnicoservice.Listar(t => t.TecnicoId > 0);
	}

	public async Task Guardar()
	{
		ErrorNombre = string.Empty;
		GuardarExito = string.Empty;

		var Guardo = await tecnicoservice.Guardar(this.Tecnico);
		if (Guardo != null)
		{
			GuardarExito = "Técnico guardado correctamente";
		}
		else
		{
			ErrorNombre = "Error al mofificar el técnico";
		}
	}
}
