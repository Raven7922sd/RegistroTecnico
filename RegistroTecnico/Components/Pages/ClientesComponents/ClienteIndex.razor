@page "/Cliente/Index"
@inject ClienteService clienteservice
@inject TecnicoService tecnicoservice
@rendermode InteractiveServer

<PageTitle>Clientes</PageTitle>

<div class="container">
	<div class="card shadow-lg">
		<div class="card-header position-relative text-center">
			<h4 class="card-title">Consultar clientes</h4>
			<a href="/Cliente/Crear" class="btn btn-success position-absolute end-0 top-0 mt-2 me-2"><span class="bi bi-plus-square mt-3"></span> Crear</a>
		</div>

		<div class="card-body">
			<div class="filters row">
				<div class="col-3">
					<label class="col-form-label"><strong>Filtrar por</strong></label>
				</div>
				<div class="col-4">
					<label class="col-form-label"><strong>Busqueda</strong></label>
				</div>
			</div>

			<div class="row aling-items-center">
				<div class="col-3 mb-3">
					<InputSelect class="form-select" @bind-Value="Filtro">
						<option value="" selected disabled>Seleccione una opción</option>
						<option value="ClienteId">Cliente Id</option>
						<option value="Nombre">Nombre</option>
					</InputSelect>
				</div>

				<div class="col-4 border-end border-2">
					<div class="input-group">
						<input class="form-control"@bind="ValorFiltro" placeholder="Buscador"/>
						<button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
					</div>
				</div>

				<div class="col-5 border-end border-2">
					<div class="input-group">
						<button class="btn btn-outline-primary" @onclick="Restablecer">Restablecer</button>
					</div>
				</div>

				<div class="table-responsive">
					<table class="table table-hover">
						<thead>
							<tr>
								<th>Cliente Id</th>
								<th>Nombre</th>
								<th>Dirección</th>
								<th>RNC</th>
								<th>Límite de Crédito</th>
								<th>Técnico Encargado</th>
								<th>Fecha de Ingreso</th>
								<th>Editar</th>
							</tr>
						</thead>
						<tbody>
							@foreach(var cliente in ListaCLientes)
							{
								<tr>
									<td>@cliente.ClienteId</td>
									<td>@cliente.ClienteNombre</td>
									<td>@cliente.DireccionCliente</td>
									<td>@cliente.Rnc</td>
									<td>@cliente.LimiteCredito.ToString("N2")</td>
									<td>@cliente.Tecnico?.TecnicoNombre</td>
									<td>@cliente.FechaIngreso.ToString("dd/MM/yyyy")</td>
									<td><a href="/Cliente/Edit/@cliente.ClienteId" class="btn btn-outline-primary bi bi-pencil-square"></a></td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

@code {
	public List<Clientes> ListaCLientes { get; set; } = new List<Clientes>();
	public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
	public string Filtro { get; set; } = string.Empty;
	public string ValorFiltro { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync(){
		ListaCLientes = await clienteservice.Listar(c => c.ClienteId > 0);
	}

	private async Task Buscar()
	{
		if (Filtro == "ClienteId"){
			if (int.TryParse(ValorFiltro, out var clienteId))
			{
				ListaCLientes = await clienteservice.Listar(c => c.ClienteId == clienteId);
			}
		}
		else if (ValorFiltro.Trim()!=""&& Filtro=="Nombre")
		{
			ListaCLientes = await clienteservice.Listar(c =>c.ClienteNombre.ToLower().Contains(ValorFiltro.ToLower()));
		}
		StateHasChanged();
	}
	private async Task Restablecer()
	{
		ListaCLientes = await clienteservice.Listar(l => l.ClienteId > 0);
		Filtro = string.Empty;
		ValorFiltro = string.Empty;
	}
}
